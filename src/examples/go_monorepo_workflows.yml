description: |
  This example shows:
   - Specific version of the isopod.
   - this is for go application
   - custom quality checks
usage:
  version: 2.1

  orbs:
    go: circleci/go@1.7.1
    ric-orb: ricardo/ric-orb@2

  cfg-isopod-version: &cfg-isopod-version
    isopod_version: 0.29.4
  cfg-go-version: &cfg-go-version
    tag: '1.17'

  parameters:
    api:
      type: boolean
      default: false
    worker:
      type: boolean
      default: false
    common:
      type: boolean
      default: false

  workflows:
    version: 2
    api:
      when:
        or:
          - << pipeline.parameters.api >>
          - << pipeline.parameters.common >>
      jobs:
        - quality-gate:
            context: dev
            appname: api
        - request_branch_deploy_dev:
            type: approval
            name: request-deploy
            filters:
              branches:
                ignore:
                  - master
        - ric-orb/build_push_image:
            <<: *cfg-isopod-version
            context: dev
            work_dir: './api'
            name: docker-branch
            requires:
              - request-deploy
              - quality-gate
        - ric-orb/deploy_job:
            <<: *cfg-isopod-version
            env: dev
            context: dev
            name: deploy-dev
            work_dir: './api'
            requires:
              - docker-branch
        #master branch
        - ric-orb/build_push_image:
            <<: *cfg-isopod-version
            context: prod
            work_dir: './api'
            name: docker-master
            filters:
              branches:
                only:
                  - master
            requires:
              - quality-gate
        - ric-orb/deploy_job:
            <<: *cfg-isopod-version
            env: dev
            context: dev
            name: deploy-master-dev
            work_dir: './api'
            requires:
              - docker-master
        - ric-orb/deploy_job:
            <<: *cfg-isopod-version
            env: prod
            context: prod
            name: deploy-prod
            work_dir: './api'
            requires:
              - deploy-master-dev

    worker:
      when:
        or:
          - << pipeline.parameters.worker >>
          - << pipeline.parameters.common >>
      jobs:
        - quality-gate:
            context: dev
            appname: worker
        - request_branch_deploy_dev:
            type: approval
            name: request-deploy
            filters:
              branches:
                ignore:
                  - master
        - ric-orb/build_push_image:
            <<: *cfg-isopod-version
            context: dev
            work_dir: './worker'
            name: docker-branch
            requires:
              - request-deploy
              - quality-gate
        - ric-orb/deploy_job:
            <<: *cfg-isopod-version
            env: dev
            context: dev
            name: deploy-dev
            work_dir: './worker'
            requires:
              - docker-branch
        #master branch
        - ric-orb/build_push_image:
            <<: *cfg-isopod-version
            context: prod
            work_dir: './worker'
            name: docker-master
            filters:
              branches:
                only:
                  - master
            requires:
              - quality-gate
        - ric-orb/deploy_job:
            <<: *cfg-isopod-version
            env: dev
            context: dev
            name: deploy-master-dev
            work_dir: './worker'
            requires:
              - docker-master
        - ric-orb/deploy_job:
            <<: *cfg-isopod-version
            env: prod
            context: prod
            name: deploy-prod
            work_dir: './worker'
            requires:
              - deploy-master-dev

    no-code-change:
      when:
        and:
          - not: << pipeline.parameters.api >>
          - not: << pipeline.parameters.worker >>
          - not: << pipeline.parameters.common >>
      jobs:
        - ric-orb/no_op

  jobs:
    quality-gate:
      parameters:
        appname:
          type: string
      executor:
        name: go/default
        <<: *cfg-go-version
      steps:
        - checkout
        - ric-orb/install_build_test:
            work_dir: << parameters.appname >>
        - run:
            name: Running tests on common
            command: make test
            working_directory: common
        - persist_to_workspace:
            root: .
            paths:
              - ./<< parameters.appname >>/app
