description: |
  Go single-app-repo example.

# Provide a use-case based example for using this orb.
# Everything in the `usage` section will be displayed in the orb registry.
# Comments are not retained.

usage:

  #############################################################################
  # This is what you typically want to have in your .circleci/config.yml
  #############################################################################

  version: 2.1

  orbs:
    go: circleci/go@1.7.1
    compliance: ricardo/compliance-orb@2
    ric-orb: ricardo/ric-orb@5

  cfg-isopod-version: &cfg-isopod-version
    isopod_version: 0.31.1

  cfg-go-build-test-executor: &cfg-go-build-test-executor
    name: go/default
    tag: '1.19'

  workflows:
    version: 2

    # FIXME: replace name with your actual app name
    singlerepo-app:
      jobs:
        # github status check typically checks this job
        - ric-orb/go_build_test:
            name: 'build-test'
            context: dev
            executor: *cfg-go-build-test-executor

        - approve_deploy_dev:
            type: approval
            filters:
              branches:
                ignore:
                  # FIXME: replace value with your actual main/master branch name
                  - master

        - ric-orb/build_push_image:
            name: 'build-push-image'
            context: dev
            <<: *cfg-isopod-version
            requires:
              - build-test
              # note semantic of 'requires': on master this is ignored
              - approve_deploy_dev

        - compliance/sre_compliance_checks:
            context: dev
            requires:
              - build-push-image

        - ric-orb/deploy_job:
            name: 'deploy-dev'
            context: dev
            <<: *cfg-isopod-version
            env: dev
            requires:
              - build-push-image

        - ric-orb/deploy_job:
            name: 'deploy-prod'
            context: prod
            <<: *cfg-isopod-version
            env: prod
            slack_notify_success: true
            slack_notify_failure: true
            # FIXME: replace value with your actual main/master branch name; 'master' is default and is not needed for the slack webhook configuration to work
            #slack_ok_branches: 'main'
            #slack_fail_branches: 'main'
            filters:
              branches:
                only:
                  # FIXME: replace value with your actual main/master branch name
                  - 'master'
            requires:
              - deploy-dev
