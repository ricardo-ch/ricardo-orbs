description: |
  This example shows:
   - Specific version of the isopod.
   - specify username/password for docker hub (public) when not usig default
   - specify username/password for private docker hub when not usig default
   - this is for go application
   - custom quality checks
usage:
  version: 2.1

  references:
    deploy_cfg: &deploy_cfg
      isopod_version: 0.31.2
    build_cfg: &build_cfg
      docker_hub_username: $MY_DOCKER_HUB_USERNAME
      docker_hub_password: $MY_DOCKER_HUB_PASSWORD
      private_hub_url: $PDOCKER_REGISTRY_URL
      cache_name: dependency-cache-{{ checksum "go.sum" }}
    qa: &qa
      quality_checks:
        - ric-orb/auth_gke
        - run:
            name: Install newman
            command: npm install newman --global
        - ric-orb/gke_port_forward:
            context: $GKE_CLUSTER_NAME
            port: 8080
            namespace: payment
            target: svc/mysvc-api-svc
        - run:
            name: Run integration tests
            command: make test-integration


  orbs:
    ric-orb: ricardo/ric-orb@1.0.0

  workflows:
    version: 2
    release_workflow:
      jobs:
        - ric-orb/build_push_image:
            <<: *build_cfg
            context: dev
            filters:
              branches:
                only:
                  - master
        - ric-orb/deploy_job:
            name: deploy_dev
            <<: *deploy_cfg
            env: dev
            context: dev
            requires:
              - ric-orb/build_push_image
        - ric-orb/quality_gate_job:
            executor: cypress-with-gcloud
            name: integration-test
            context: dev
            <<: *qa
            requires:
              - deploy_dev
        - ric-orb/deploy_job:
            name: prod
            <<: *deploy_cfg
            env: prod
            context: prod
            requires:
              - integration-test

    development_workflow:
      jobs:
        - ric-orb/quality_gate_job:
            name: quality-gate
            executor: go
            context: dev
            cache_name: dependency-cache-{{ checksum "go.sum" }}
            cache_path: "$GOPATH/pkg/mod"
            filters:
              branches:
                ignore:
                  - master
        - request_branch_deployment_to_dev:
            type: approval
            filters:
              branches:
                ignore:
                  - master
        - ric-orb/build_push_image:
            <<: *build_cfg
            context: dev
            requires:
              - request_branch_deployment_to_dev
              - quality-gate
        - ric-orb/deploy_job:
            <<: *deploy_cfg
            env: dev
            context: dev
            name: dev_deploy
            requires:
              - ric-orb/build_push_image
        - ric-orb/quality_gate_job:
            executor: cypress-with-gcloud
            name: integration-test
            context: dev
            <<: *qa
            requires:
              - dev_deploy

  executors:
    cypress-with-gcloud:
      docker:
        - image: someimage:latest
          auth:
            username: $PDOCKER_USERNAME
            password: $PDOCKER_PASSWORD
      working_directory: /go/src/github.com/myapp
    go:
      docker:
        - image: circleci/golang:1.14
          auth:
            username: $MY_DOCKER_HUB_USERNAME
            password: $MY_DOCKER_HUB_PASSWORD
      working_directory: /go/src/github.com/myapp
