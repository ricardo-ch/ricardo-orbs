description: >
  This job builds and pushes Docker image to private Docker hub. It uses isopod for building and pushing.
  As dependencies can be pulled from Docker HUB authentication is needed for it as well.
executor: << parameters.executor >>
parameters:
  executor:
    type: executor
  docker_hub_username:
    type: string
    default: $DOCKER_HUB_USERNAME
  docker_hub_password:
    type: string
    default: $DOCKER_HUB_PASSWORD
  private_hub_username:
    type: string
    default: $DOCKER_JFROG_USERNAME
  private_hub_password:
    type: string
    default: $DOCKER_JFROG_PASSWORD
  private_hub_url:
    type: string
    default: $DOCKER_JFROG_REGISTRY_URL
  cache_name:
    type: string
    default: "mvn-repository"
  cache_path:
    type: string
    default: "~/.m2"
  workspace_path:
    type: string
    default: "."
  maven_credentials:
    type: string
    default: ARTIFACTORY_MAVEN_CREDENTIALS
  docker_layer_cashing:
    type: boolean
    default: false
steps:
  - checkout
  - maven_auth:
      maven_credentials: << parameters.maven_credentials >>
  - login_docker_registry:
      username: <<parameters.docker_hub_username>>
      password: <<parameters.docker_hub_password>>
  - login_docker_registry:
      url: <<parameters.private_hub_url>>
      username: <<parameters.private_hub_username>>
      password: <<parameters.private_hub_password>>
  - restore_cache:
      name: restore mvn cache
      keys:
        - <<parameters.cache_name>>-{{ checksum "pom.xml" }}
        - <<parameters.cache_name>>
  - run:
      name: Test and Build
      command: ./mvnw clean verify -U -P integration-tests
  - save_cache:
      name: save mvn cache
      key: <<parameters.cache_name>>-{{ checksum "pom.xml" }}
      paths:
        - <<parameters.cache_path>>
  - persist_to_workspace:
      root: .
      paths:
        - <<parameters.workspace_path>>
