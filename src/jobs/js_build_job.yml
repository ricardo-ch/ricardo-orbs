description: >
  Build application

# Executor

executor: js

# Execution

steps:
  - checkout
  - attach_workspace:
      at: .
  - when:
      condition:
        equal: [nextjs, << parameters.app_type >>]
      steps:
        - js_restore_nextjs_cache
  # to be sure that local env is not used in production
  - run:
      name: Delete .env
      command: rm .env
  - when:
      condition:
        equal: [ nextjs, << parameters.app_type >> ]
      steps:
        - run:
            name: Generate build env
            # expose the right env variables (beta or prod) to the builder
            command: |
              APP_ENV=<< parameters.build_env >> yarn run generate:build-env
  - run:
      name: Build the application
      command: APP_ENV=<< parameters.build_env >> yarn ci:build
  - js_save_build_outputs:
      app_type: << parameters.app_type >>
      build_env: << parameters.build_env >>
  - when:
      condition:
        equal: [nextjs, << parameters.app_type >>]
      # https://nextjs.org/docs/messages/no-cache
      # https://nextjs.org/docs/advanced-features/ci-build-caching#circleci 
      steps:
        - js_save_nextjs_cache

# generic CircleCI params

resource_class: << parameters.resource_class >>

# Parameters

parameters:
  app_type:
    type: enum
    enum: [ 'legacy', 'nextjs' ]
    default: nextjs
  build_env:
    type: enum
    enum: ['beta', 'prod']
    default: beta
  resource_class:
    type: string
    default: large
